#-------------------------------------------------------------------------------
# Ansible connection variables and arguments
#-------------------------------------------------------------------------------

ansible_user: user1fname
# TODO: Use SSH certificates for live deployment so convert to that here.

ansible_ssh_pass: user1passwd

ansible_ssh_extra_args: >-
  -o StrictHostKeyChecking=no
  -o UserKnownHostsFile=/dev/null
  -o LogLevel=QUIET

#-------------------------------------------------------------------------------
# Variables used by the roles in my Libraries - Ansible repository
# See the README for that repository at:
# https://github.com/varilink/libraries-ansible#readme
# for documentation about these variables.
#-------------------------------------------------------------------------------

# Mandatory
# ---------

backup_database_host: database-internal

backup_database_password: bacula

backup_database_username: bacula

backup_director_console_password: TcDZJfHhmC8CkEe7bAVcAPfPkGgYrpXp7

backup_director_name: services_backup_director

backup_monitor_name:  services_backup_monitor

# The backup storage daemon is actually colocated with the backup director
backup_storage_host: backup_director

backup_storage_name: services_backup_storage

# The password that must be supplied to connect to the bacula storage daemon.
backup_storage_password: Ffjqa8w4TuNyLhKbFcht8aJeK5EcRYAn5

# My dns_linode_key is in a private file that is not tracked in this repository
# for security reasons.

home_domain: home.com

home_domain_admin_user: user1fname

office_subnet: 10.0.0.0/24

# There is also a variable dns_linode_key defined in the "all" group. However
# that variable is sensitive and so is not tracked in this Git repository.

# Optional
# --------

# Override the default folder for off-site copies to keep my test backups
# separated from my live backups within my Dropbox account.
backup_copy_folder: bacula-test

# Override the default whereby scheduled jobs would be automatically run. I want
# to manually initiate all backups in the testing environment.
backup_director_schedules_active: false

# Set the Dynamic DNS script to run much more frequently than the default as I
# don't want to wait to see things happen when I'm testing.
dynamic_dns_crontab_stride: 1

# When testing uses containers, we often tear-down and recreate the containers
# over and over again. If we're integrating with Let's Encrypt, this can easily
# lead to hitting their usage constraints. For this reason we override the
# default behaviour of the email_certificates and domain_email_certificates
# roles, which is to integrate with Let's Encrypt.
email_uses_ca: false

# Since we're testing in a container environment we need to enable unsafe writes
# for overwriting the /etc/hosts and /etc/resolv.conf file.s
unsafe_writes: yes
