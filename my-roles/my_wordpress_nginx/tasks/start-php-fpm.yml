# ------------------------------------------------------------------------------
# my-roles/my_wordpress_nginx/tasks/start-php-fpm.yml
# ------------------------------------------------------------------------------

---

- name: Get the codename of the Debian release on this host
  ansible.builtin.command: lsb_release --codename --short
  register: lsb_release
  changed_when: false

- name: Test if the php-fpm process is running
  ansible.builtin.shell: "pgrep -f '^php-fpm: master process$' || true"
  register: pgrep_result
  changed_when: false

- block:

    - name: Create the /run/php directory
      ansible.builtin.file:
        path: /run/php
        state: directory

    - name: Start the php-fpm process if it isn't already running
      ansible.builtin.shell: |-
        echo 'php-fpm    : Starting' >> '/var/local/services.log'
        {% if debian_release == 'bullseye' %}
        nohup php-fpm7.4 -F 2>&1 | sed 's/^/php-fpm    : /' \
          >> '/var/local/servies.log' &
        {% elif debian_release == 'buster' %}
        nohup php-fpm7.3 -F 2>&1 | sed 's/^/php-fpm    : /' \
          >> '/var/local/servies.log' &
        {% elif debian_release == 'stretch' %}
        nohup php-fpm7.0 -F 2>&1 | sed 's/^/php-fpm    : /' \
          >> '/var/local/servies.log' &
        {% endif %}

        n=0
        while [ $n -lt 3 ]; do
          sleep 3
          pgrep -f '^php-fpm: master process$' && \
            echo 'php-fpm    : Started' >> '/var/local/services.log' && break
          let n=n+1
        done

        if [ $n -eq 3 ]; then
          echo 'php-fpm    : Failed to start process' \
            >> /var/local/services.log
        fi
      args:
        executable: /bin/bash
      vars:
        debian_release: "{{ lsb_release.stdout }}"

  become: yes
  when: non pgrep_result.stdout