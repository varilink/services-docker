---

# Deploy to the dns-api host first. The email_certificates role uses ssh-keygen
# to generate an SSH key for connecting to the host of the email-external role
# for the purposes of deploying SSL certificates for IMAP and SMTP client
# connections. When the email-external role is deployed it must have the
# generated public key.

- hosts: email-certificates
  roles: [email_certificates]

# Deploy roles where there is no inter-host dependency so all

- hosts: all
  roles: [backup_client]

- hosts: all:!email-external:!email-internal
  roles: [email]

- hosts: backup-director
  roles: [backup_director, backup_storage]

- hosts: caldav
  roles: [calendar]

- hosts: database
  roles: [database]

- hosts: dns
  roles: [dns]

- hosts: dynamic-dns
  roles: [dynamic_dns]

- hosts: email-external
  roles: [email_external]

- hosts: email-internal
  roles: [email_internal]

- hosts: reverse_proxy
  roles: [reverse_proxy]

- hosts: wordpress
  roles: [wordpress]

#- hosts: email-certificates
#  roles:
#    - role: domain_email_certificate
#      vars:
#        email_domain: varilink.co.uk
#        email_fqdn: email-external.{{ email_domain }}
#        email_orgname: Varilink Computing Ltd
#        email_altnames:
#          - imap.{{ email_domain }}
#          - smtp.{{ email_domain }}
#        email_domain_uses_ca: false

# Deploy the DNS client role last. When we do this in "for deploy" mode it
# immediately breaks DNS resolution for hosts that use the internal DNS service,
# since the host for the dns-internal role is not at that point running and
# exposing its DNS service.

#- hosts: all
#  roles: [dns_client]
